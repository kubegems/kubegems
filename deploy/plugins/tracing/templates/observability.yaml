
# https://github.com/jaegertracing/helm-charts
apiVersion: plugins.kubegems.io/v1beta1
kind: Plugin
metadata:
  name: jaeger-operator
  namespace: {{ .Release.Namespace }}
spec:
  kind: helm
  url: https://jaegertracing.github.io/helm-charts
  version: {{ .Values.chartVersion }}
  values:
    image:
      # repository: docker.io/jaegertracing/jaeger-operator
      {{ include "common.images.repository" ( dict "registry" "docker.io" "repository" "jaegertracing/jaeger-operator" "context" .) }}
      tag: {{ .Chart.AppVersion }}
    rbac:
      clusterRole: true
    jaeger:
      create: true
      spec: 
        {{- $version := .Chart.AppVersion }}
        strategy: production
        ingress:
          enabled: false
        query:
          # image: jaegertracing/jaeger-query
          {{ include "common.images.repository" ( dict "key" "image" "registry" "docker.io" "repository" "jaegertracing/jaeger-query" "tag" $version "context" .) }}
          metricsStorage:
            type: prometheus
        ingester:
          # image: jaegertracing/jaeger-ingester
          {{ include "common.images.repository" ( dict "key" "image" "registry" "docker.io" "repository" "jaegertracing/jaeger-ingester" "tag" $version "context" .) }}
        agent:
          # image: jaegertracing/jaeger-agent
          {{ include "common.images.repository" ( dict "key" "image" "registry" "docker.io" "repository" "jaegertracing/jaeger-agent" "tag" $version "context" .) }}
        collector:
          # image: jaegertracing/jaeger-collector
          {{ include "common.images.repository" ( dict "key" "image" "registry" "docker.io" "repository" "jaegertracing/jaeger-collector" "tag" $version "context" .) }}
          options:
            collector.zipkin.host-port: "9411"
        storage:
          secretName: jaeger-spm
          dependencies:
            enabled: false
          type: elasticsearch
          esIndexCleaner:
            # image: jaegertracing/jaeger-es-index-cleaner
            {{ include "common.images.repository" ( dict "key" "image" "registry" "docker.io" "repository" "jaegertracing/jaeger-es-index-cleaner" "tag" $version "context" .) }}
          options:
            es:
              {{- if .Values.elasticsearch.address }}
              server-urls: {{ .Values.elasticsearch.address }}
              {{- else }}
              server-urls: http://elasticsearch-master.observability:9200
              {{- end }}
              {{- if .Values.elasticsearch.num-shards }}
              num-shards: {{ .Values.elasticsearch.num-shards }}
              {{- end }}
              {{- if .Values.elasticsearch.num-replicas }}
              num-replicas: {{ .Values.elasticsearch.num-replicas }}
              {{- end }}
              {{- if .Values.elasticsearch.timeout }}
              timeout: {{ .Values.elasticsearch.timeout }}
              {{- end }}

---
apiVersion: v1
data:
  PROMETHEUS_SERVER_URL: "{{ .Values.monitoring.prometheus.address  | b64enc }}"
kind: Secret
metadata:
  name: jaeger-spm
  namespace: {{ .Release.Namespace }}
type: Opaque
---
kind: Service
apiVersion: v1
metadata:
  name: jaeger-query  # jaeger-operator's svc name is jaeger-operator-jaeger-query,create a new service for jaeger-query
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: jaeger
    app.kubernetes.io/component: query
  ports:
    - name: http-query
      port: 16686
      targetPort: 16686
    - name: grpc-query
      port: 16685
      targetPort: 16685
