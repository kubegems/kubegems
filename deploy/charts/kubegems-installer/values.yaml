## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity

## @section installer Parameters

## installer configuration
##
installer:
  ## kubegems installer image
  ## @param installer.image.registry installer image registry
  ## @param installer.image.repository installer image repository
  ## @param installer.image.tag installer image tag (immutable tags are recommended)
  ## @param installer.image.pullPolicy installer image pull policy
  ## @param installer.image.pullSecrets installer image pull secrets
  ## @param installer.image.debug Enable installer image debug mode
  ##
  image:
    registry: docker.io
    repository: kubegems/kubegems
    tag: latest
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false
  ## @param installer.replicaCount Number of installer replicas to deploy
  ##
  replicaCount: 1
  ## @param installer.containerPorts.probe installer probe container port
  ##
  containerPorts:
    probe: 8080
  ## Configure extra options for installer containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param installer.livenessProbe.enabled Enable livenessProbe on installer containers
  ## @param installer.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param installer.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param installer.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param installer.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param installer.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param installer.readinessProbe.enabled Enable readinessProbe on installer containers
  ## @param installer.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param installer.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param installer.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param installer.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param installer.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param installer.startupProbe.enabled Enable startupProbe on installer containers
  ## @param installer.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param installer.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param installer.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param installer.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param installer.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param installer.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param installer.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param installer.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## installer resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param installer.resources.limits The resources limits for the installer containers
  ## @param installer.resources.requests The requested resources for the installer containers
  ##
  resources:
    limits: {}
    requests: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param installer.podSecurityContext.enabled Enabled installer pods' Security Context
  ## @param installer.podSecurityContext.fsGroup Set installer pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param installer.containerSecurityContext.enabled Enabled installer containers' Security Context
  ## @param installer.containerSecurityContext.runAsUser Set installer containers' Security Context runAsUser
  ## @param installer.containerSecurityContext.runAsNonRoot Set installer containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true

  ## Configure Leader Election
  ##
  ## @param installer.leaderElection.enabled Enable leader election
  leaderElection:
    enabled: true

  ## Configure logging
  ##
  ## @param installer.logLevel Log level
  logLevel: debug

  ## @param installer.existingConfigmap The name of an existing ConfigMap with your custom configuration for installer
  ##
  existingConfigmap:
  ## @param installer.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param installer.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param installer.hostAliases installer pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param installer.podLabels Extra labels for installer pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param installer.podAnnotations Annotations for installer pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param installer.podAffinityPreset Pod affinity preset. Ignored if `installer.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param installer.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `installer.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node installer.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param installer.nodeAffinityPreset.type Node affinity preset type. Ignored if `installer.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param installer.nodeAffinityPreset.key Node label key to match. Ignored if `installer.affinity` is set
    ##
    key: ""
    ## @param installer.nodeAffinityPreset.values Node label values to match. Ignored if `installer.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []

  ## @param installer.enableAffinity If enabled Affinity for installer pods assignment
  enableAffinity: false

  ## @param installer.affinity Affinity for installer pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `installer.podAffinityPreset`, `installer.podAntiAffinityPreset`, and `installer.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param installer.nodeSelector Node labels for installer pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param installer.tolerations Tolerations for installer pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param installer.updateStrategy.type installer statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param installer.priorityClassName installer pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param installer.schedulerName Name of the k8s scheduler (other than default) for installer pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param installer.lifecycleHooks for the installer container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param installer.extraEnvVars Array with extra environment variables to add to installer nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param installer.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for installer nodes
  ##
  extraEnvVarsCM:
  ## @param installer.extraEnvVarsSecret Name of existing Secret containing extra env vars for installer nodes
  ##
  extraEnvVarsSecret:
  ## @param installer.extraVolumes Optionally specify extra list of additional volumes for the installer pod(s)
  ##
  extraVolumes: []
  ## @param installer.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the installer container(s)
  ##
  extraVolumeMounts: []
  ## @param installer.sidecars Add additional sidecar containers to the installer pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param installer.initContainers Add additional init containers to the installer pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}

  ## @section Agent Metrics parameters
  ##
  metrics:
    ## @param installer.metrics.enabled Create a service for accessing the metrics endpoint
    ##
    enabled: true
    ## Metrics service parameters
    ##

    service:
      ## @param installer.metrics.service.type controller metrics service type
      ##
      type: ClusterIP
      ## @param installer.metrics.service.port controller metrics service HTTP port
      ##
      port: 9100
      ## Node ports to expose
      ## @param installer.metrics.service.nodePort Node port for HTTP
      ## NOTE: choose port between <30000-32767>
      ##
      nodePort: ""
      ## @param installer.metrics.service.clusterIP controller metrics service Cluster IP
      ## e.g.:
      ## clusterIP: None
      ##
      clusterIP: ""
      ## @param installer.metrics.service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
      ##
      extraPorts: []
      ## @param installer.metrics.service.loadBalancerIP controller metrics service Load Balancer IP
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
      ##
      loadBalancerIP: ""
      ## @param installer.metrics.service.loadBalancerSourceRanges controller metrics service Load Balancer sources
      ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ## e.g:
      ## loadBalancerSourceRanges:
      ##   - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []
      ## @param installer.metrics.service.externalTrafficPolicy controller metrics service external traffic policy
      ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
      ##
      externalTrafficPolicy: Cluster
      ## @param installer.metrics.service.annotations [object] Additional custom annotations for controller metrics service
      ##
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.installer.metrics.service.port }}"
    serviceMonitor:
      ## @param installer.metrics.serviceMonitor.enabled Specify if a servicemonitor will be deployed for prometheus-operator
      ##
      enabled: true
      ## @param installer.metrics.serviceMonitor.jobLabel Specify the jobLabel to use for the prometheus-operator
      ##
      jobLabel: app.kubernetes.io/name
      ## @param installer.metrics.serviceMonitor.honorLabels Honor metrics labels
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ##
      honorLabels: false
      ## @param installer.metrics.serviceMonitor.selector Prometheus instance selector labels
      ## ref: https://github.com/bitnami/plugins/tree/master/bitnami/prometheus-operator#prometheus-configuration
      ## e.g:
      ## selector:
      ##   prometheus: my-prometheus
      ##
      selector: {}
      ## @param installer.metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ## e.g:
      ## scrapeTimeout: 10s
      ##
      scrapeTimeout: ""
      ## @param installer.metrics.serviceMonitor.interval Scrape interval. If not set, the Prometheus default scrape interval is used
      ##
      interval: ""
      ## @param installer.metrics.serviceMonitor.additionalLabels Used to pass Labels that are required by the installed Prometheus Operator
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
      ##
      additionalLabels: {}

      ## @param installer.metrics.serviceMonitor.metricRelabelings Specify additional relabeling of metrics
      ## @skip installer.metrics.serviceMonitor.metricRelabelings
      metricRelabelings: {}

      ## @param installer.metrics.serviceMonitor.relabelings Specify general relabeling
      ## @skip installer.metrics.serviceMonitor.relabelings
      relabelings: {}

## @section Installer plugins image
plugins:
  ## kubgems plugins image
  ## @param plugins.image.registry plugins image registry
  ## @param plugins.image.repository plugins image repository
  ## @param plugins.image.tag plugins image tag (immutable tags are recommended)
  ## @param plugins.image.pullPolicy plugins image pull policy
  ## @param plugins.image.pullSecrets plugins image pull secrets
  ## @param plugins.image.debug Enable plugins image debug mode
  ##
  image:
    registry: docker.io
    repository: kubegems/kubegems-plugin
    tag: latest
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false

## @section RBAC Parameters

## RBAC configuration
##
rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  ## @param rbac.useClusterAdmin clusterrolbinding to cluster-admin instead create clusterrole
  ##
  create: true
  useClusterAdmin: true

## ServiceAccount configuration
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
