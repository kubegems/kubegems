apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "common.names.fullname" . }}-init
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: kubegems
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  backoffLimit: 10
  parallelism: 1
  template:
    metadata:
      {{- if .Values.init.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.init.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: kubegems
        {{- if .Values.init.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.init.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: {{ .Values.init.restartPolicy }}
      {{- include "kubegems.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.init.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.init.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.init.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.init.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.init.podAffinityPreset "component" "init" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.init.podAntiAffinityPreset "component" "init" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.init.nodeAffinityPreset.type "key" .Values.init.nodeAffinityPreset.key "values" .Values.init.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.init.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.init.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.init.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.init.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.init.priorityClassName }}
      priorityClassName: {{ .Values.init.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.init.schedulerName }}
      schedulerName: {{ .Values.init.schedulerName | quote }}
      {{- end }}
      {{- if .Values.init.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.init.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if .Values.init.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.init.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: mysql-init
          image: {{ template "kubegems.init.image" . }}
          imagePullPolicy: {{ .Values.init.image.pullPolicy }}
          {{- if .Values.init.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.init.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.init.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.init.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.init.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.init.args "context" $) | nindent 12 }}
          {{- else}}
          args:
            - service
            - migrate
            - --initdata=true
          {{- end }}
          env:
            {{- include "kubegems.common.env" . | indent 12 }}
          envFrom:
            - secretRef:
                name: {{ template "kubegems.secret.fullname" . }}
            {{- if .Values.init.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.init.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.init.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.init.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.init.resources }}
          resources: {{- toYaml .Values.init.resources | nindent 12 }}
          {{- end }}