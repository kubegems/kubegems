{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Global Docker image registry"
                },
                "imagePullSecrets": {
                    "type": "array",
                    "default": "[]",
                    "description": "Global Docker registry secret names as an array"
                },
                "storageClass": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Global StorageClass for Persistent Volume(s)"
                },
                "kubegemsVersion": {
                    "type": "string",
                    "default": "main",
                    "description": "Global kubegems version"
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "default": "\"\"",
            "description": "Override Kubernetes version"
        },
        "nameOverride": {
            "type": "string",
            "default": "\"\"",
            "description": "String to partially override common.names.fullname"
        },
        "fullnameOverride": {
            "type": "string",
            "default": "\"\"",
            "description": "String to fully override common.names.fullname"
        },
        "commonLabels": {
            "type": "object",
            "default": "{}",
            "description": "Labels to add to all deployed objects"
        },
        "commonAnnotations": {
            "type": "object",
            "default": "{}",
            "description": "Annotations to add to all deployed objects"
        },
        "clusterDomain": {
            "type": "string",
            "default": "cluster.local",
            "description": "Kubernetes cluster domain name"
        },
        "extraDeploy": {
            "type": "array",
            "default": "[]",
            "description": "Array of extra objects to deploy with the release"
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable diagnostic mode (all probes will be disabled and the command will be overridden)"
                },
                "command": {
                    "type": "array",
                    "default": "[\"sleep\"]",
                    "description": "Command to override all containers in the deployment"
                },
                "args": {
                    "type": "array",
                    "default": "[\"infinity\"]",
                    "description": "Args to override all containers in the deployment"
                }
            }
        },
        "dashboard": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "default": "docker.io",
                            "description": "dashboard image registry"
                        },
                        "repository": {
                            "type": "string",
                            "default": "kubegems/dashboard",
                            "description": "dashboard image repository"
                        },
                        "tag": {
                            "type": "string",
                            "default": "latest",
                            "description": "dashboard image tag (immutable tags are recommended)"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "default": "IfNotPresent",
                            "description": "dashboard image pull policy"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "default": "[]",
                            "description": "dashboard image pull secrets"
                        },
                        "debug": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable dashboard image debug mode"
                        }
                    }
                },
                "replicaCount": {
                    "type": "number",
                    "default": 1,
                    "description": "Number of dashboard replicas to deploy"
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "default": 8000,
                            "description": "dashboard HTTP container port"
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable livenessProbe on dashboard containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for livenessProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for livenessProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for livenessProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for livenessProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for livenessProbe"
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable readinessProbe on dashboard containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for readinessProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for readinessProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for readinessProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for readinessProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for readinessProbe"
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable startupProbe on dashboard containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for startupProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for startupProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for startupProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for startupProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for startupProbe"
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom livenessProbe that overrides the default one"
                },
                "customReadinessProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom readinessProbe that overrides the default one"
                },
                "customStartupProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom startupProbe that overrides the default one"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "default": "{}",
                            "description": "The resources limits for the dashboard containers"
                        },
                        "requests": {
                            "type": "object",
                            "default": "{}",
                            "description": "The requested resources for the dashboard containers"
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enabled dashboard pods' Security Context"
                        },
                        "fsGroup": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set dashboard pod's Security Context fsGroup"
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enabled dashboard containers' Security Context"
                        },
                        "runAsUser": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set dashboard containers' Security Context runAsUser"
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "default": true,
                            "description": "Set dashboard containers' Security Context runAsNonRoot"
                        }
                    }
                },
                "existingConfigmap": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "The name of an existing ConfigMap with your custom configuration for dashboard"
                },
                "command": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container command (useful when using custom images)"
                },
                "args": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container args (useful when using custom images)"
                },
                "hostAliases": {
                    "type": "array",
                    "default": "[]",
                    "description": "dashboard pods host aliases"
                },
                "podLabels": {
                    "type": "object",
                    "default": "{}",
                    "description": "Extra labels for dashboard pods"
                },
                "podAnnotations": {
                    "type": "object",
                    "default": "{}",
                    "description": "Annotations for dashboard pods"
                },
                "podAffinityPreset": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Pod affinity preset. Ignored if `dashboard.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "default": "soft",
                    "description": "Pod anti-affinity preset. Ignored if `dashboard.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node affinity preset type. Ignored if `dashboard.affinity` is set. Allowed values: `soft` or `hard`"
                        },
                        "key": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node label key to match. Ignored if `dashboard.affinity` is set"
                        },
                        "values": {
                            "type": "array",
                            "default": "[]",
                            "description": "Node label values to match. Ignored if `dashboard.affinity` is set"
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "default": "{}",
                    "description": "Affinity for dashboard pods assignment"
                },
                "nodeSelector": {
                    "type": "object",
                    "default": "{}",
                    "description": "Node labels for dashboard pods assignment"
                },
                "tolerations": {
                    "type": "array",
                    "default": "[]",
                    "description": "Tolerations for dashboard pods assignment"
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "RollingUpdate",
                            "description": "dashboard statefulset strategy type"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "dashboard pods' priorityClassName"
                },
                "schedulerName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Name of the k8s scheduler (other than default) for dashboard pods"
                },
                "lifecycleHooks": {
                    "type": "object",
                    "default": "{}",
                    "description": "for the dashboard container(s) to automate configuration before or after startup"
                },
                "extraEnvVars": {
                    "type": "array",
                    "default": "[]",
                    "description": "Array with extra environment variables to add to dashboard nodes"
                },
                "extraEnvVarsCM": {
                    "type": "object",
                    "default": "{}",
                    "description": "Name of existing ConfigMap containing extra env vars for dashboard nodes"
                },
                "extraEnvVarsSecret": {
                    "type": "object",
                    "default": "{}",
                    "description": "Name of existing Secret containing extra env vars for dashboard nodes"
                },
                "extraVolumes": {
                    "type": "array",
                    "default": "[]",
                    "description": "Optionally specify extra list of additional volumes for the dashboard pod(s)"
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "default": "[]",
                    "description": "Optionally specify extra list of additional volumeMounts for the dashboard container(s)"
                },
                "sidecars": {
                    "type": "object",
                    "default": "{}",
                    "description": "Add additional sidecar containers to the dashboard pod(s)"
                },
                "initContainers": {
                    "type": "object",
                    "default": "{}",
                    "description": "Add additional init containers to the dashboard pod(s)"
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "ClusterIP",
                            "description": "dashboard service type"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "default": 80,
                                    "description": "dashboard service HTTP port"
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Node port for HTTP"
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "dashboard service Cluster IP"
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "dashboard service Load Balancer IP"
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "default": "[]",
                            "description": "dashboard service Load Balancer sources"
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "default": "Cluster",
                            "description": "dashboard service external traffic policy"
                        },
                        "annotations": {
                            "type": "object",
                            "default": "{}",
                            "description": "Additional custom annotations for dashboard service"
                        },
                        "extraPorts": {
                            "type": "array",
                            "default": "[]",
                            "description": "Extra ports to expose in dashboard service (normally used with the `sidecars` value)"
                        }
                    }
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Create a service for accessing the metrics endpoint"
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "default": "ClusterIP",
                                    "description": "controller metrics service type"
                                },
                                "port": {
                                    "type": "number",
                                    "default": 9100,
                                    "description": "controller metrics service HTTP port"
                                },
                                "nodePort": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Node port for HTTP"
                                },
                                "clusterIP": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "controller metrics service Cluster IP"
                                },
                                "extraPorts": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Extra ports to expose (normally used with the `sidecar` value)"
                                },
                                "loadBalancerIP": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "controller metrics service Load Balancer IP"
                                },
                                "loadBalancerSourceRanges": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "controller metrics service Load Balancer sources"
                                },
                                "externalTrafficPolicy": {
                                    "type": "string",
                                    "default": "Cluster",
                                    "description": "controller metrics service external traffic policy"
                                },
                                "annotations": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Additional custom annotations for controller metrics service"
                                }
                            }
                        },
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "Specify if a servicemonitor will be deployed for prometheus-operator"
                                },
                                "jobLabel": {
                                    "type": "string",
                                    "default": "app.kubernetes.io/name",
                                    "description": "Specify the jobLabel to use for the prometheus-operator"
                                },
                                "honorLabels": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Honor metrics labels"
                                },
                                "selector": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Prometheus instance selector labels"
                                },
                                "scrapeTimeout": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Timeout after which the scrape is ended"
                                },
                                "interval": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Scrape interval. If not set, the Prometheus default scrape interval is used"
                                },
                                "additionalLabels": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Used to pass Labels that are required by the installed Prometheus Operator"
                                },
                                "metricRelabelings": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Specify additional relabeling of metrics"
                                },
                                "relabelings": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Specify general relabeling"
                                }
                            }
                        }
                    }
                }
            }
        },
        "init": {
            "type": "object",
            "properties": {
                "charts": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "object",
                            "properties": {
                                "registry": {
                                    "type": "string",
                                    "default": "docker.io",
                                    "description": "image registry"
                                },
                                "repository": {
                                    "type": "string",
                                    "default": "kubegems/appstore-charts",
                                    "description": "image repository"
                                },
                                "tag": {
                                    "type": "string",
                                    "default": "latest",
                                    "description": "image tag (immutable tags are recommended)"
                                },
                                "pullPolicy": {
                                    "type": "string",
                                    "default": "IfNotPresent",
                                    "description": "image pull policy"
                                },
                                "pullSecrets": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "image pull secrets"
                                },
                                "debug": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Enable image debug mode"
                                }
                            }
                        },
                        "replicaCount": {
                            "type": "number",
                            "default": 1,
                            "description": "Number of API replicas to deploy"
                        },
                        "restartPolicy": {
                            "type": "string",
                            "default": "OnFailure",
                            "description": "The restart policy for job,valid values: \"OnFailure\", \"Never\""
                        },
                        "command": {
                            "type": "array",
                            "default": "[]",
                            "description": "Override default container command (useful when using custom images)"
                        },
                        "args": {
                            "type": "array",
                            "default": "[]",
                            "description": "Override default container args (useful when using custom images)"
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "default": "docker.io",
                            "description": "API image registry"
                        },
                        "repository": {
                            "type": "string",
                            "default": "kubegems/kubegems",
                            "description": "API image repository"
                        },
                        "tag": {
                            "type": "string",
                            "default": "latest",
                            "description": "API image tag (immutable tags are recommended)"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "default": "IfNotPresent",
                            "description": "API image pull policy"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "default": "[]",
                            "description": "API image pull secrets"
                        },
                        "debug": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable API image debug mode"
                        }
                    }
                },
                "replicaCount": {
                    "type": "number",
                    "default": 1,
                    "description": "Number of API replicas to deploy"
                },
                "existingConfigmap": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "The name of an existing ConfigMap with your custom configuration for API"
                },
                "restartPolicy": {
                    "type": "string",
                    "default": "OnFailure",
                    "description": "The restart policy for job,valid values: \"OnFailure\", \"Never\""
                },
                "command": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container command (useful when using custom images)"
                },
                "args": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container args (useful when using custom images)"
                },
                "hostAliases": {
                    "type": "array",
                    "default": "[]",
                    "description": "API pods host aliases"
                },
                "podLabels": {
                    "type": "object",
                    "default": "{}",
                    "description": "Extra labels for API pods"
                },
                "podAnnotations": {
                    "type": "object",
                    "default": "{}",
                    "description": "Annotations for API pods"
                },
                "podAffinityPreset": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Pod affinity preset. Ignored if `init.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "default": "soft",
                    "description": "Pod anti-affinity preset. Ignored if `init.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node affinity preset type. Ignored if `init.affinity` is set. Allowed values: `soft` or `hard`"
                        },
                        "key": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node label key to match. Ignored if `init.affinity` is set"
                        },
                        "values": {
                            "type": "array",
                            "default": "[]",
                            "description": "Node label values to match. Ignored if `init.affinity` is set"
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "default": "{}",
                    "description": "Affinity for API pods assignment"
                },
                "nodeSelector": {
                    "type": "object",
                    "default": "{}",
                    "description": "Node labels for API pods assignment"
                },
                "tolerations": {
                    "type": "array",
                    "default": "[]",
                    "description": "Tolerations for API pods assignment"
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "RollingUpdate",
                            "description": "API statefulset strategy type"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "API pods' priorityClassName"
                },
                "schedulerName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Name of the k8s scheduler (other than default) for API pods"
                },
                "lifecycleHooks": {
                    "type": "object",
                    "default": "{}",
                    "description": "for the API container(s) to automate configuration before or after startup"
                },
                "extraEnvVars": {
                    "type": "array",
                    "default": "[]",
                    "description": "Array with extra environment variables to add to API nodes"
                },
                "extraEnvVarsCM": {
                    "type": "object",
                    "default": "{}",
                    "description": "Name of existing ConfigMap containing extra env vars for API nodes"
                },
                "extraEnvVarsSecret": {
                    "type": "object",
                    "default": "{}",
                    "description": "Name of existing Secret containing extra env vars for API nodes"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "default": "{}",
                            "description": "The resources limits for the API containers"
                        },
                        "requests": {
                            "type": "object",
                            "default": "{}",
                            "description": "The requested resources for the API containers"
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enabled API pods' Security Context"
                        },
                        "fsGroup": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set API pod's Security Context fsGroup"
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enabled API containers' Security Context"
                        },
                        "runAsUser": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set API containers' Security Context runAsUser"
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "default": true,
                            "description": "Set API containers' Security Context runAsNonRoot"
                        }
                    }
                }
            }
        },
        "api": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "default": "docker.io",
                            "description": "API image registry"
                        },
                        "repository": {
                            "type": "string",
                            "default": "kubegems/kubegems",
                            "description": "API image repository"
                        },
                        "tag": {
                            "type": "string",
                            "default": "latest",
                            "description": "API image tag (immutable tags are recommended)"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "default": "IfNotPresent",
                            "description": "API image pull policy"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "default": "[]",
                            "description": "API image pull secrets"
                        },
                        "debug": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable API image debug mode"
                        }
                    }
                },
                "replicaCount": {
                    "type": "number",
                    "default": 1,
                    "description": "Number of API replicas to deploy"
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "default": 8080,
                            "description": "API HTTP container port"
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable livenessProbe on API containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for livenessProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for livenessProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for livenessProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for livenessProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for livenessProbe"
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable readinessProbe on API containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for readinessProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for readinessProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for readinessProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for readinessProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for readinessProbe"
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable startupProbe on API containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for startupProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for startupProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for startupProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for startupProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for startupProbe"
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom livenessProbe that overrides the default one"
                },
                "customReadinessProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom readinessProbe that overrides the default one"
                },
                "customStartupProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom startupProbe that overrides the default one"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "default": "{}",
                            "description": "The resources limits for the API containers"
                        },
                        "requests": {
                            "type": "object",
                            "default": "{}",
                            "description": "The requested resources for the API containers"
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enabled API pods' Security Context"
                        },
                        "fsGroup": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set API pod's Security Context fsGroup"
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enabled API containers' Security Context"
                        },
                        "runAsUser": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set API containers' Security Context runAsUser"
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "default": true,
                            "description": "Set API containers' Security Context runAsNonRoot"
                        }
                    }
                },
                "jwt": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable jwt authentication"
                        },
                        "useCertManager": {
                            "type": "boolean",
                            "default": false,
                            "description": "using cert-manager for jwt secret generation"
                        },
                        "secretName": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "secret name alternative"
                        }
                    }
                },
                "existingConfigmap": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "The name of an existing ConfigMap with your custom configuration for API"
                },
                "command": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container command (useful when using custom images)"
                },
                "args": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container args (useful when using custom images)"
                },
                "hostAliases": {
                    "type": "array",
                    "default": "[]",
                    "description": "API pods host aliases"
                },
                "podLabels": {
                    "type": "object",
                    "default": "{}",
                    "description": "Extra labels for API pods"
                },
                "podAnnotations": {
                    "type": "object",
                    "default": "{}",
                    "description": "Annotations for API pods"
                },
                "podAffinityPreset": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Pod affinity preset. Ignored if `api.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "default": "soft",
                    "description": "Pod anti-affinity preset. Ignored if `api.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node affinity preset type. Ignored if `api.affinity` is set. Allowed values: `soft` or `hard`"
                        },
                        "key": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node label key to match. Ignored if `api.affinity` is set"
                        },
                        "values": {
                            "type": "array",
                            "default": "[]",
                            "description": "Node label values to match. Ignored if `api.affinity` is set"
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "default": "{}",
                    "description": "Affinity for API pods assignment"
                },
                "nodeSelector": {
                    "type": "object",
                    "default": "{}",
                    "description": "Node labels for API pods assignment"
                },
                "tolerations": {
                    "type": "array",
                    "default": "[]",
                    "description": "Tolerations for API pods assignment"
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "RollingUpdate",
                            "description": "API statefulset strategy type"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "API pods' priorityClassName"
                },
                "schedulerName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Name of the k8s scheduler (other than default) for API pods"
                },
                "lifecycleHooks": {
                    "type": "object",
                    "default": "{}",
                    "description": "for the API container(s) to automate configuration before or after startup"
                },
                "extraEnvVars": {
                    "type": "array",
                    "default": "[]",
                    "description": "Array with extra environment variables to add to API nodes"
                },
                "extraEnvVarsCM": {
                    "type": "object",
                    "default": "{}",
                    "description": "Name of existing ConfigMap containing extra env vars for API nodes"
                },
                "extraEnvVarsSecret": {
                    "type": "object",
                    "default": "{}",
                    "description": "Name of existing Secret containing extra env vars for API nodes"
                },
                "extraVolumes": {
                    "type": "array",
                    "default": "[]",
                    "description": "Optionally specify extra list of additional volumes for the API pod(s)"
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "default": "[]",
                    "description": "Optionally specify extra list of additional volumeMounts for the API container(s)"
                },
                "sidecars": {
                    "type": "object",
                    "default": "{}",
                    "description": "Add additional sidecar containers to the API pod(s)"
                },
                "initContainers": {
                    "type": "object",
                    "default": "{}",
                    "description": "Add additional init containers to the API pod(s)"
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "ClusterIP",
                            "description": "API service type"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "default": 80,
                                    "description": "API service HTTP port"
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "default": 0,
                                    "description": "Node port for HTTP"
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "API service Cluster IP"
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "API service Load Balancer IP"
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "default": "[]",
                            "description": "API service Load Balancer sources"
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "default": "Cluster",
                            "description": "API service external traffic policy"
                        },
                        "annotations": {
                            "type": "object",
                            "default": "{}",
                            "description": "Additional custom annotations for API service"
                        },
                        "extraPorts": {
                            "type": "array",
                            "default": "[]",
                            "description": "Extra ports to expose in API service (normally used with the `sidecars` value)"
                        }
                    }
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Create a service for accessing the metrics endpoint"
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "default": "ClusterIP",
                                    "description": "controller metrics service type"
                                },
                                "port": {
                                    "type": "number",
                                    "default": 9100,
                                    "description": "controller metrics service HTTP port"
                                },
                                "nodePort": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Node port for HTTP"
                                },
                                "clusterIP": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "controller metrics service Cluster IP"
                                },
                                "extraPorts": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Extra ports to expose (normally used with the `sidecar` value)"
                                },
                                "loadBalancerIP": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "controller metrics service Load Balancer IP"
                                },
                                "loadBalancerSourceRanges": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "controller metrics service Load Balancer sources"
                                },
                                "externalTrafficPolicy": {
                                    "type": "string",
                                    "default": "Cluster",
                                    "description": "controller metrics service external traffic policy"
                                },
                                "annotations": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Additional custom annotations for controller metrics service"
                                }
                            }
                        },
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "Specify if a servicemonitor will be deployed for prometheus-operator"
                                },
                                "jobLabel": {
                                    "type": "string",
                                    "default": "app.kubernetes.io/name",
                                    "description": "Specify the jobLabel to use for the prometheus-operator"
                                },
                                "honorLabels": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Honor metrics labels"
                                },
                                "selector": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Prometheus instance selector labels"
                                },
                                "scrapeTimeout": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Timeout after which the scrape is ended"
                                },
                                "interval": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Scrape interval. If not set, the Prometheus default scrape interval is used"
                                },
                                "additionalLabels": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Used to pass Labels that are required by the installed Prometheus Operator"
                                },
                                "metricRelabelings": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Specify additional relabeling of metrics"
                                },
                                "relabelings": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Specify general relabeling"
                                }
                            }
                        }
                    }
                }
            }
        },
        "msgbus": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "default": "docker.io",
                            "description": "msgbus image registry"
                        },
                        "repository": {
                            "type": "string",
                            "default": "kubegems/kubegems",
                            "description": "msgbus image repository"
                        },
                        "tag": {
                            "type": "string",
                            "default": "latest",
                            "description": "msgbus image tag (immutable tags are recommended)"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "default": "IfNotPresent",
                            "description": "msgbus image pull policy"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "default": "[]",
                            "description": "msgbus image pull secrets"
                        },
                        "debug": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable msgbus image debug mode"
                        }
                    }
                },
                "replicaCount": {
                    "type": "number",
                    "default": 1,
                    "description": "Number of msgbus replicas to deploy"
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "default": 8080,
                            "description": "msgbus HTTP container port"
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable livenessProbe on msgbus containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for livenessProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for livenessProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for livenessProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for livenessProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for livenessProbe"
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable readinessProbe on msgbus containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for readinessProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for readinessProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for readinessProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for readinessProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for readinessProbe"
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable startupProbe on msgbus containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for startupProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for startupProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for startupProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for startupProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for startupProbe"
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom livenessProbe that overrides the default one"
                },
                "customReadinessProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom readinessProbe that overrides the default one"
                },
                "customStartupProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom startupProbe that overrides the default one"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "default": "{}",
                            "description": "The resources limits for the msgbus containers"
                        },
                        "requests": {
                            "type": "object",
                            "default": "{}",
                            "description": "The requested resources for the msgbus containers"
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enabled msgbus pods' Security Context"
                        },
                        "fsGroup": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set msgbus pod's Security Context fsGroup"
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enabled msgbus containers' Security Context"
                        },
                        "runAsUser": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set msgbus containers' Security Context runAsUser"
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "default": true,
                            "description": "Set msgbus containers' Security Context runAsNonRoot"
                        }
                    }
                },
                "existingConfigmap": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "The name of an existing ConfigMap with your custom configuration for msgbus"
                },
                "command": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container command (useful when using custom images)"
                },
                "args": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container args (useful when using custom images)"
                },
                "hostAliases": {
                    "type": "array",
                    "default": "[]",
                    "description": "msgbus pods host aliases"
                },
                "podLabels": {
                    "type": "object",
                    "default": "{}",
                    "description": "Extra labels for msgbus pods"
                },
                "podAnnotations": {
                    "type": "object",
                    "default": "{}",
                    "description": "Annotations for msgbus pods"
                },
                "podAffinityPreset": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Pod affinity preset. Ignored if `msgbus.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "default": "soft",
                    "description": "Pod anti-affinity preset. Ignored if `msgbus.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node affinity preset type. Ignored if `msgbus.affinity` is set. Allowed values: `soft` or `hard`"
                        },
                        "key": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node label key to match. Ignored if `msgbus.affinity` is set"
                        },
                        "values": {
                            "type": "array",
                            "default": "[]",
                            "description": "Node label values to match. Ignored if `msgbus.affinity` is set"
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "default": "{}",
                    "description": "Affinity for msgbus pods assignment"
                },
                "nodeSelector": {
                    "type": "object",
                    "default": "{}",
                    "description": "Node labels for msgbus pods assignment"
                },
                "tolerations": {
                    "type": "array",
                    "default": "[]",
                    "description": "Tolerations for msgbus pods assignment"
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "RollingUpdate",
                            "description": "msgbus statefulset strategy type"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "msgbus pods' priorityClassName"
                },
                "schedulerName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Name of the k8s scheduler (other than default) for msgbus pods"
                },
                "lifecycleHooks": {
                    "type": "object",
                    "default": "{}",
                    "description": "for the msgbus container(s) to automate configuration before or after startup"
                },
                "extraEnvVars": {
                    "type": "array",
                    "default": "[]",
                    "description": "Array with extra environment variables to add to msgbus nodes"
                },
                "extraEnvVarsCM": {
                    "type": "object",
                    "default": "{}",
                    "description": "Name of existing ConfigMap containing extra env vars for msgbus nodes"
                },
                "extraEnvVarsSecret": {
                    "type": "object",
                    "default": "{}",
                    "description": "Name of existing Secret containing extra env vars for msgbus nodes"
                },
                "extraVolumes": {
                    "type": "array",
                    "default": "[]",
                    "description": "Optionally specify extra list of additional volumes for the msgbus pod(s)"
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "default": "[]",
                    "description": "Optionally specify extra list of additional volumeMounts for the msgbus container(s)"
                },
                "sidecars": {
                    "type": "object",
                    "default": "{}",
                    "description": "Add additional sidecar containers to the msgbus pod(s)"
                },
                "initContainers": {
                    "type": "object",
                    "default": "{}",
                    "description": "Add additional init containers to the msgbus pod(s)"
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "ClusterIP",
                            "description": "msgbus service type"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "default": 80,
                                    "description": "msgbus service HTTP port"
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Node port for HTTP"
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "msgbus service Cluster IP"
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "msgbus service Load Balancer IP"
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "default": "[]",
                            "description": "msgbus service Load Balancer sources"
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "default": "Cluster",
                            "description": "msgbus service external traffic policy"
                        },
                        "annotations": {
                            "type": "object",
                            "default": "{}",
                            "description": "Additional custom annotations for msgbus service"
                        },
                        "extraPorts": {
                            "type": "array",
                            "default": "[]",
                            "description": "Extra ports to expose in msgbus service (normally used with the `sidecars` value)"
                        }
                    }
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Create a service for accessing the metrics endpoint"
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "default": "ClusterIP",
                                    "description": "controller metrics service type"
                                },
                                "port": {
                                    "type": "number",
                                    "default": 9100,
                                    "description": "controller metrics service HTTP port"
                                },
                                "nodePort": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Node port for HTTP"
                                },
                                "clusterIP": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "controller metrics service Cluster IP"
                                },
                                "extraPorts": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Extra ports to expose (normally used with the `sidecar` value)"
                                },
                                "loadBalancerIP": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "controller metrics service Load Balancer IP"
                                },
                                "loadBalancerSourceRanges": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "controller metrics service Load Balancer sources"
                                },
                                "externalTrafficPolicy": {
                                    "type": "string",
                                    "default": "Cluster",
                                    "description": "controller metrics service external traffic policy"
                                },
                                "annotations": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Additional custom annotations for controller metrics service"
                                }
                            }
                        },
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "Specify if a servicemonitor will be deployed for prometheus-operator"
                                },
                                "jobLabel": {
                                    "type": "string",
                                    "default": "app.kubernetes.io/name",
                                    "description": "Specify the jobLabel to use for the prometheus-operator"
                                },
                                "honorLabels": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Honor metrics labels"
                                },
                                "selector": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Prometheus instance selector labels"
                                },
                                "scrapeTimeout": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Timeout after which the scrape is ended"
                                },
                                "interval": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Scrape interval. If not set, the Prometheus default scrape interval is used"
                                },
                                "additionalLabels": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Used to pass Labels that are required by the installed Prometheus Operator"
                                },
                                "metricRelabelings": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Specify additional relabeling of metrics"
                                },
                                "relabelings": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Specify general relabeling"
                                }
                            }
                        }
                    }
                }
            }
        },
        "worker": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "default": "docker.io",
                            "description": "worker image registry"
                        },
                        "repository": {
                            "type": "string",
                            "default": "kubegems/kubegems",
                            "description": "worker image repository"
                        },
                        "tag": {
                            "type": "string",
                            "default": "latest",
                            "description": "worker image tag (immutable tags are recommended)"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "default": "IfNotPresent",
                            "description": "worker image pull policy"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "default": "[]",
                            "description": "worker image pull secrets"
                        },
                        "debug": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable worker image debug mode"
                        }
                    }
                },
                "replicaCount": {
                    "type": "number",
                    "default": 1,
                    "description": "Number of worker replicas to deploy"
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "default": 8080,
                            "description": "worker HTTP container port"
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable livenessProbe on worker containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for livenessProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for livenessProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for livenessProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for livenessProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for livenessProbe"
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable readinessProbe on worker containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for readinessProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for readinessProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for readinessProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for readinessProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for readinessProbe"
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable startupProbe on worker containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for startupProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for startupProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for startupProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for startupProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for startupProbe"
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom livenessProbe that overrides the default one"
                },
                "customReadinessProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom readinessProbe that overrides the default one"
                },
                "customStartupProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom startupProbe that overrides the default one"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "default": "{}",
                            "description": "The resources limits for the worker containers"
                        },
                        "requests": {
                            "type": "object",
                            "default": "{}",
                            "description": "The requested resources for the worker containers"
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enabled worker pods' Security Context"
                        },
                        "fsGroup": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set worker pod's Security Context fsGroup"
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enabled worker containers' Security Context"
                        },
                        "runAsUser": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set worker containers' Security Context runAsUser"
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "default": true,
                            "description": "Set worker containers' Security Context runAsNonRoot"
                        }
                    }
                },
                "existingConfigmap": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "The name of an existing ConfigMap with your custom configuration for worker"
                },
                "command": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container command (useful when using custom images)"
                },
                "args": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container args (useful when using custom images)"
                },
                "hostAliases": {
                    "type": "array",
                    "default": "[]",
                    "description": "worker pods host aliases"
                },
                "podLabels": {
                    "type": "object",
                    "default": "{}",
                    "description": "Extra labels for worker pods"
                },
                "podAnnotations": {
                    "type": "object",
                    "default": "{}",
                    "description": "Annotations for worker pods"
                },
                "podAffinityPreset": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Pod affinity preset. Ignored if `worker.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "default": "soft",
                    "description": "Pod anti-affinity preset. Ignored if `worker.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node affinity preset type. Ignored if `worker.affinity` is set. Allowed values: `soft` or `hard`"
                        },
                        "key": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node label key to match. Ignored if `worker.affinity` is set"
                        },
                        "values": {
                            "type": "array",
                            "default": "[]",
                            "description": "Node label values to match. Ignored if `worker.affinity` is set"
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "default": "{}",
                    "description": "Affinity for worker pods assignment"
                },
                "nodeSelector": {
                    "type": "object",
                    "default": "{}",
                    "description": "Node labels for worker pods assignment"
                },
                "tolerations": {
                    "type": "array",
                    "default": "[]",
                    "description": "Tolerations for worker pods assignment"
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "RollingUpdate",
                            "description": "worker statefulset strategy type"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "worker pods' priorityClassName"
                },
                "schedulerName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Name of the k8s scheduler (other than default) for worker pods"
                },
                "lifecycleHooks": {
                    "type": "object",
                    "default": "{}",
                    "description": "for the worker container(s) to automate configuration before or after startup"
                },
                "extraEnvVars": {
                    "type": "array",
                    "default": "[]",
                    "description": "Array with extra environment variables to add to worker nodes"
                },
                "extraEnvVarsCM": {
                    "type": "object",
                    "default": "{}",
                    "description": "Name of existing ConfigMap containing extra env vars for worker nodes"
                },
                "extraEnvVarsSecret": {
                    "type": "object",
                    "default": "{}",
                    "description": "Name of existing Secret containing extra env vars for worker nodes"
                },
                "extraVolumes": {
                    "type": "array",
                    "default": "[]",
                    "description": "Optionally specify extra list of additional volumes for the worker pod(s)"
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "default": "[]",
                    "description": "Optionally specify extra list of additional volumeMounts for the worker container(s)"
                },
                "sidecars": {
                    "type": "object",
                    "default": "{}",
                    "description": "Add additional sidecar containers to the worker pod(s)"
                },
                "initContainers": {
                    "type": "object",
                    "default": "{}",
                    "description": "Add additional init containers to the worker pod(s)"
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "ClusterIP",
                            "description": "worker service type"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "default": 80,
                                    "description": "worker service HTTP port"
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Node port for HTTP"
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "worker service Cluster IP"
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "worker service Load Balancer IP"
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "default": "[]",
                            "description": "worker service Load Balancer sources"
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "default": "Cluster",
                            "description": "worker service external traffic policy"
                        },
                        "annotations": {
                            "type": "object",
                            "default": "{}",
                            "description": "Additional custom annotations for worker service"
                        },
                        "extraPorts": {
                            "type": "array",
                            "default": "[]",
                            "description": "Extra ports to expose in worker service (normally used with the `sidecars` value)"
                        }
                    }
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Create a service for accessing the metrics endpoint"
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "default": "ClusterIP",
                                    "description": "controller metrics service type"
                                },
                                "port": {
                                    "type": "number",
                                    "default": 9100,
                                    "description": "controller metrics service HTTP port"
                                },
                                "nodePort": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Node port for HTTP"
                                },
                                "clusterIP": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "controller metrics service Cluster IP"
                                },
                                "extraPorts": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Extra ports to expose (normally used with the `sidecar` value)"
                                },
                                "loadBalancerIP": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "controller metrics service Load Balancer IP"
                                },
                                "loadBalancerSourceRanges": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "controller metrics service Load Balancer sources"
                                },
                                "externalTrafficPolicy": {
                                    "type": "string",
                                    "default": "Cluster",
                                    "description": "controller metrics service external traffic policy"
                                },
                                "annotations": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Additional custom annotations for controller metrics service"
                                }
                            }
                        },
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "Specify if a servicemonitor will be deployed for prometheus-operator"
                                },
                                "jobLabel": {
                                    "type": "string",
                                    "default": "app.kubernetes.io/name",
                                    "description": "Specify the jobLabel to use for the prometheus-operator"
                                },
                                "honorLabels": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Honor metrics labels"
                                },
                                "selector": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Prometheus instance selector labels"
                                },
                                "scrapeTimeout": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Timeout after which the scrape is ended"
                                },
                                "interval": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Scrape interval. If not set, the Prometheus default scrape interval is used"
                                },
                                "additionalLabels": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Used to pass Labels that are required by the installed Prometheus Operator"
                                },
                                "metricRelabelings": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Specify additional relabeling of metrics"
                                },
                                "relabelings": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Specify general relabeling"
                                }
                            }
                        }
                    }
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable ingress record generation for API"
                },
                "pathType": {
                    "type": "string",
                    "default": "ImplementationSpecific",
                    "description": "Ingress path type"
                },
                "apiVersion": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Force Ingress API version (automatically detected if not set)"
                },
                "hostname": {
                    "type": "string",
                    "default": "dashboard.kubegems.io",
                    "description": "Default host for the ingress record"
                },
                "ingressClassName": {
                    "type": "string",
                    "default": "default-gateway",
                    "description": "Ingress class name"
                },
                "path": {
                    "type": "string",
                    "default": "/",
                    "description": "Default path for the ingress record"
                },
                "annotations": {
                    "type": "object",
                    "default": "{}",
                    "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations."
                },
                "tls": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable TLS configuration for the host defined at `ingress.hostname` parameter"
                },
                "selfSigned": {
                    "type": "boolean",
                    "default": false,
                    "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm"
                },
                "extraHosts": {
                    "type": "array",
                    "default": "[]",
                    "description": "An array with additional hostname(s) to be covered with the ingress record"
                },
                "extraPaths": {
                    "type": "array",
                    "default": "[]",
                    "description": "An array with additional arbitrary paths that may need to be added to the ingress under the main host"
                },
                "extraTls": {
                    "type": "array",
                    "default": "[]",
                    "description": "TLS configuration for additional hostname(s) to be covered with this ingress record"
                },
                "secrets": {
                    "type": "array",
                    "default": "[]",
                    "description": "Custom TLS certificates as secrets"
                }
            }
        },
        "volumePermissions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`"
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "default": "docker.io",
                            "description": "Bitnami Shell image registry"
                        },
                        "repository": {
                            "type": "string",
                            "default": "bitnami/bitnami-shell",
                            "description": "Bitnami Shell image repository"
                        },
                        "tag": {
                            "type": "string",
                            "default": "10-debian-10-r%%IMAGE_REVISION%%",
                            "description": "Bitnami Shell image tag (immutable tags are recommended)"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "default": "IfNotPresent",
                            "description": "Bitnami Shell image pull policy"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "default": "[]",
                            "description": "Bitnami Shell image pull secrets"
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "default": "{}",
                            "description": "The resources limits for the init container"
                        },
                        "requests": {
                            "type": "object",
                            "default": "{}",
                            "description": "The requested resources for the init container"
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "runAsUser": {
                            "type": "number",
                            "default": 0,
                            "description": "Set init container's Security Context runAsUser"
                        }
                    }
                }
            }
        },
        "persistence": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable persistent storage"
                },
                "storageClass": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Storage class name"
                },
                "accessModes": {
                    "type": "array",
                    "default": "[\"ReadWriteOnce\"]",
                    "description": "PVC Access Mode for volume"
                },
                "size": {
                    "type": "string",
                    "default": "6Gi",
                    "description": "PVC Size for volume"
                },
                "existingClaim": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Specify if the PVC already exists"
                },
                "annotations": {
                    "type": "object",
                    "default": "{}",
                    "description": "Additional custom annotations for PVC"
                },
                "selector": {
                    "type": "object",
                    "default": "{}",
                    "description": "PVC selector"
                }
            }
        },
        "mysql": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable MySQL"
                },
                "architecture": {
                    "type": "string",
                    "default": "standalone",
                    "description": "architecture."
                },
                "auth": {
                    "type": "object",
                    "properties": {
                        "rootPassword": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "The password for the MySQL root user."
                        },
                        "username": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "The nonroot username of the MySQL."
                        },
                        "password": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "The nonroot password of the MySQL."
                        },
                        "database": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Create database of the MySQL."
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "default": "kubegems/mysql",
                            "description": "mysql repository override"
                        }
                    }
                }
            }
        },
        "externalDatabase": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable External Database Configuration"
                },
                "host": {
                    "type": "string",
                    "default": "mysql",
                    "description": "Database host"
                },
                "port": {
                    "type": "number",
                    "default": 3306,
                    "description": "Database port number"
                },
                "username": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Non-root username for Concourse"
                },
                "password": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Password for the non-root username for Concourse"
                },
                "database": {
                    "type": "string",
                    "default": "kubegems",
                    "description": "Concourse database name"
                },
                "existingSecret": {
                    "type": "string",
                    "default": "mysql",
                    "description": "Name of an existing secret resource containing the database credentials"
                },
                "existingSecretPasswordKey": {
                    "type": "string",
                    "default": "mysql-root-password",
                    "description": "Name of an existing secret key containing the database credentials"
                }
            }
        },
        "redis": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable redis"
                },
                "architecture": {
                    "type": "string",
                    "default": "standalone",
                    "description": "architecture."
                },
                "auth": {
                    "type": "object",
                    "properties": {
                        "password": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "The password for the redis,keep emty to use default."
                        }
                    }
                },
                "volumePermissions": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`"
                        },
                        "image": {
                            "type": "object",
                            "properties": {
                                "repository": {
                                    "type": "string",
                                    "default": "kubegems/bitnami-shell",
                                    "description": "Repository override"
                                }
                            }
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "default": "kubegems/redis",
                            "description": "redis repository override"
                        }
                    }
                }
            }
        },
        "externalRedis": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable external redis"
                },
                "host": {
                    "type": "string",
                    "default": "redis",
                    "description": "Redis host"
                },
                "port": {
                    "type": "number",
                    "default": 6379,
                    "description": "Redis port number"
                },
                "password": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Redis password"
                },
                "existingSecret": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Name of an existing secret resource containing the redis credentials"
                },
                "existingSecretPasswordKey": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Name of an existing secret key containing the redis credentials"
                }
            }
        },
        "argo-cd": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable Argo CD"
                },
                "config": {
                    "type": "object",
                    "properties": {
                        "secret": {
                            "type": "object",
                            "properties": {
                                "argocdServerAdminPassword": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "The password for the ArgoCD server admin user,keep empty to auto-generate."
                                }
                            }
                        }
                    }
                },
                "controller": {
                    "type": "object",
                    "properties": {
                        "extraArgs": {
                            "type": "array",
                            "default": "[\"--redisdb\",\"1\"]",
                            "description": "Extra ArgoCD controller args"
                        }
                    }
                },
                "server": {
                    "type": "object",
                    "properties": {
                        "extraArgs": {
                            "type": "array",
                            "default": "[\"--redisdb\",\"1\"]",
                            "description": "Extra ArgoCD server args"
                        }
                    }
                },
                "repoServer": {
                    "type": "object",
                    "properties": {
                        "extraArgs": {
                            "type": "array",
                            "default": "[\"--redisdb\",\"1\"]",
                            "description": "Extra ArgoCD repo server args"
                        }
                    }
                },
                "redis": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Disable Argo CD redis to use kubegems redis"
                        },
                        "image": {
                            "type": "object",
                            "properties": {
                                "repository": {
                                    "type": "string",
                                    "default": "kubegems/redis",
                                    "description": "argocd redis image"
                                }
                            }
                        }
                    }
                },
                "externalRedis": {
                    "type": "object",
                    "properties": {
                        "host": {
                            "type": "string",
                            "default": "kubegems-redis-headless",
                            "description": "Kubegems Redis host"
                        },
                        "existingSecret": {
                            "type": "string",
                            "default": "kubegems-redis",
                            "description": "Kubegems Redis secret"
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "default": "kubegems/argo-cd",
                            "description": "argo-cd repository override"
                        }
                    }
                }
            }
        },
        "externalArgoCD": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable external Argo CD"
                },
                "address": {
                    "type": "string",
                    "default": "http://argo-cd-argocd-server.argo-cd",
                    "description": "Argo CD address"
                },
                "username": {
                    "type": "string",
                    "default": "admin",
                    "description": "Argo CD username"
                },
                "password": {
                    "type": "string",
                    "default": "password",
                    "description": "Argo CD password"
                },
                "existingSecret": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Name of an existing secret resource containing the Argo CD credentials"
                },
                "existingSecretPasswordKey": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Name of an existing secret key containing the Argo CD credentials"
                }
            }
        },
        "gitea": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable Gitea"
                },
                "memcached": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Disable Gitea memcached by default"
                        }
                    }
                },
                "postgresql": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Disable Gitea postgresql by default,use built in sqlite3 instead."
                        }
                    }
                },
                "gitea": {
                    "type": "object",
                    "properties": {
                        "config": {
                            "type": "object",
                            "properties": {
                                "database": {
                                    "type": "object",
                                    "properties": {
                                        "DB_TYPE": {
                                            "type": "string",
                                            "default": "sqlite3",
                                            "description": "Use sqlite3 by default"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "default": "kubegems/gitea",
                            "description": "gitea repository override"
                        }
                    }
                }
            }
        },
        "externalGit": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable external Git"
                },
                "address": {
                    "type": "string",
                    "default": "https://git.example.com",
                    "description": "Git server address"
                },
                "username": {
                    "type": "string",
                    "default": "root",
                    "description": "Git username"
                },
                "password": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Git password"
                },
                "existingSecret": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Name of an existing secret resource containing the Git credentials"
                },
                "existingSecretPasswordKey": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Name of an existing secret key containing the Git credentials"
                }
            }
        },
        "chartmuseum": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable Chartmuseum"
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "default": "kubegems/chartmuseum",
                            "description": "chartmuseum repository override"
                        }
                    }
                },
                "env": {
                    "type": "object",
                    "default": 1,
                    "description": "Chartmuseum environment variables"
                }
            }
        },
        "externalAppstore": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable external Chartmuseum"
                },
                "address": {
                    "type": "string",
                    "default": "https://chartmuseum.example.com",
                    "description": "External Chartmuseum address"
                }
            }
        }
    }
}