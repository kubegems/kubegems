apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
    meta.helm.sh/release-name: kubegems-installer
    meta.helm.sh/release-namespace: kubegems-installer
  creationTimestamp: null
  name: plugins.plugins.kubegems.io
spec:
  group: plugins.kubegems.io
  names:
    kind: Plugin
    listKind: PluginList
    plural: plugins
    singular: plugin
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Status of the plugin
      jsonPath: .status.phase
      name: Status
      type: string
    - description: Install Namespace of the plugin
      jsonPath: .status.installNamespace
      name: InstallNamespace
      type: string
    - description: Version of the plugin
      jsonPath: .status.version
      name: Version
      type: string
    - description: UpgradeTimestamp of the plugin
      jsonPath: .status.upgradeTimestamp
      name: UpgradeTimestamp
      type: date
    - description: CreationTimestamp of the plugin
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              dependencies:
                description: dependencies on other plugins
                items:
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                    version:
                      type: string
                  type: object
                type: array
              enabled:
                type: boolean
              installNamespace:
                description: plugin install namespace, same with metadata.namespace
                  if empty.
                type: string
              kind:
                description: plugin kind, e.g. "helm","kustomize","native".
                type: string
              path:
                description: plugin repo path
                type: string
              repo:
                description: plugin repo url
                type: string
              resources:
                description: inline resources
                items:
                  type: object
                type: array
                x-kubernetes-preserve-unknown-fields: true
              values:
                description: plugin values, helm values
                type: object
                x-kubernetes-preserve-unknown-fields: true
              version:
                description: plugin version,also helm chart version
                type: string
            type: object
          status:
            properties:
              creationTimestamp:
                format: date-time
                type: string
              deletionTimestamp:
                format: date-time
                type: string
              installNamespace:
                description: plugin installNamespace,if empty use .metadata.namespace
                type: string
              message:
                description: Message is the message associated with the status
                type: string
              notes:
                description: Contains the rendered templates/NOTES.txt if available
                type: string
              phase:
                description: Phase is the current state of the release
                type: string
              upgradeTimestamp:
                format: date-time
                type: string
              values:
                type: object
                x-kubernetes-preserve-unknown-fields: true
              version:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubegems-installer
    meta.helm.sh/release-namespace: kubegems-installer
  labels:
    app.kubernetes.io/component: installer
    app.kubernetes.io/instance: kubegems-installer
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubegems-installer
    helm.sh/chart: kubegems-installer-0.1.0
  name: kubegems-installer
  namespace: kubegems-installer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubegems-installer
    meta.helm.sh/release-namespace: kubegems-installer
  labels:
    app.kubernetes.io/component: installer
    app.kubernetes.io/instance: kubegems-installer
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubegems-installer
    helm.sh/chart: kubegems-installer-0.1.0
  name: kubegems-installer
  namespace: kubegems-installer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kubegems-installer
  namespace: kubegems-installer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubegems-installer
    meta.helm.sh/release-namespace: kubegems-installer
  labels:
    app.kubernetes.io/component: installer
    app.kubernetes.io/instance: kubegems-installer
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubegems-installer
    helm.sh/chart: kubegems-installer-0.1.0
  name: kubegems-installer
  namespace: kubegems-installer
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: installer
      app.kubernetes.io/instance: kubegems-installer
      app.kubernetes.io/name: kubegems-installer
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: installer
        app.kubernetes.io/instance: kubegems-installer
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kubegems-installer
        helm.sh/chart: kubegems-installer-0.1.0
    spec:
      containers:
      - args:
        - installer
        - --pluginsdir=/app/plugins
        - --enableleaderelection
        - --probeaddr=:8080
        - --metricsaddr=:9100
        env:
        - name: LOG_LEVEL
          value: debug
        image: docker.io/kubegems/kubegems:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /healthz
            port: probe
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: installer
        ports:
        - containerPort: 8080
          name: probe
          protocol: TCP
        - containerPort: 9100
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /healthz
            port: probe
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits: {}
          requests: {}
      serviceAccountName: kubegems-installer
