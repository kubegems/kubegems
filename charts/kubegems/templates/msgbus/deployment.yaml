apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "kubegems.dashboard.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: dashboard
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.dashboard.replicaCount }}
  {{- if .Values.dashboard.updateStrategy }}
  strategy: {{- toYaml .Values.dashboard.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: dashboard
  template:
    metadata:
      {{- if .Values.dashboard.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.dashboard.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: dashboard
        {{- if .Values.dashboard.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.dashboard.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "kubegems.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.dashboard.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.dashboard.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.dashboard.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.dashboard.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.dashboard.podAffinityPreset "component" "dashboard" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.dashboard.podAntiAffinityPreset "component" "dashboard" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.dashboard.nodeAffinityPreset.type "key" .Values.dashboard.nodeAffinityPreset.key "values" .Values.dashboard.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.dashboard.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.dashboard.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.dashboard.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.dashboard.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.dashboard.priorityClassName }}
      priorityClassName: {{ .Values.dashboard.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.dashboard.schedulerName }}
      schedulerName: {{ .Values.dashboard.schedulerName | quote }}
      {{- end }}
      {{- if .Values.dashboard.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.dashboard.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: dashboard
          image: {{ include "kubegems.dashboard.image" . }}
          imagePullPolicy: {{ .Values.dashboard.image.pullPolicy }}
          {{- if .Values.dashboard.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.dashboard.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.dashboard.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.dashboard.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.dashboard.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.dashboard.args "context" $) | nindent 12 }}
          {{- else }}
          args:
            - msgbus
            - --system-listen=:{{ .Values.msgbus.containerPorts.http }}
            {{- if .Values.api.jwt.enabled }}
            - --jwt-cert=/certs/jwt/tls.crt
            - --jwt-key=/certs/jwt/tls.key
            {{- end }}
            {{- if .Values.dashboard.extraArgs }}
            {{- include "common.tplvalues.render" (dict "value" .Values.dashboard.extraArgs "context" $) | nindent 12 }}
            {{- end }}
          {{- end }}
          env:
            - name: KUBEGEMS_DEBUG
              value: {{ ternary "true" "false" (or .Values.dashboard.image.debug ) | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.dashboard.logLevel }}
            {{- if .Values.dashboard.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.dashboard.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            - secretRef:
                name: {{ template "common.names.fullname" . }}
            {{- if .Values.dashboard.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.dashboard.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.dashboard.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.dashboard.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.dashboard.resources }}
          resources: {{- toYaml .Values.dashboard.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.dashboard.containerPorts.http }}
            {{- if .Values.dashboard.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.dashboard.metrics.service.port }}
              protocol: TCP
            {{- end }}
          {{- if .Values.dashboard.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.dashboard.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /healthz
              port: http
            periodSeconds: {{ .Values.dashboard.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.dashboard.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.dashboard.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.dashboard.livenessProbe.failureThreshold }}
          {{- else if .Values.dashboard.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.dashboard.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.dashboard.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.dashboard.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /healthz
              port: http
            periodSeconds: {{ .Values.dashboard.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.dashboard.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.dashboard.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.dashboard.readinessProbe.failureThreshold }}
          {{- else if .Values.dashboard.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.dashboard.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.dashboard.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.dashboard.startupProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /healthz
              port: http
            periodSeconds: {{ .Values.dashboard.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.dashboard.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.dashboard.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.dashboard.startupProbe.failureThreshold }}
          {{- else if .Values.dashboard.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.dashboard.customStartupProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.dashboard.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.dashboard.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if .Values.api.jwt.enabled }}
            - name: jwt-certs
              mountPath: /certs/jwt
              readOnly: true
            {{- end }}
          {{- if .Values.dashboard.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.dashboard.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.dashboard.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.dashboard.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        {{- if .Values.api.jwt.enabled }}
        - name: jwt-certs
          secret:
            secretName: {{ template "kubegems.api.jwt.secretName" . }}
            defaultMode: 420
        {{- end }}
        {{- if .Values.dashboard.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.dashboard.extraVolumes "context" $) | nindent 8 }}
        {{- end }}