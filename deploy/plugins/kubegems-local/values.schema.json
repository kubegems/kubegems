{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Global Docker image registry"
                },
                "imagePullSecrets": {
                    "type": "array",
                    "default": "[]",
                    "description": "Global Docker registry secret names as an array"
                },
                "storageClass": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Global StorageClass for Persistent Volume(s)"
                },
                "kubegemsVersion": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Kubegems version"
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "default": "\"\"",
            "description": "Override Kubernetes version"
        },
        "nameOverride": {
            "type": "string",
            "default": "\"\"",
            "description": "String to partially override common.names.fullname"
        },
        "fullnameOverride": {
            "type": "string",
            "default": "\"\"",
            "description": "String to fully override common.names.fullname"
        },
        "commonLabels": {
            "type": "object",
            "default": "{}",
            "description": "Labels to add to all deployed objects"
        },
        "commonAnnotations": {
            "type": "object",
            "default": "{}",
            "description": "Annotations to add to all deployed objects"
        },
        "clusterDomain": {
            "type": "string",
            "default": "cluster.local",
            "description": "Kubernetes cluster domain name"
        },
        "extraDeploy": {
            "type": "array",
            "default": "[]",
            "description": "Array of extra objects to deploy with the release"
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable diagnostic mode (all probes will be disabled and the command will be overridden)"
                },
                "command": {
                    "type": "array",
                    "default": "[\"sleep\"]",
                    "description": "Command to override all containers in the the deployment(s)/statefulset(s)"
                },
                "args": {
                    "type": "array",
                    "default": "[\"infinity\"]",
                    "description": "Args to override all containers in the the deployment(s)/statefulset(s)"
                }
            }
        },
        "agent": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "default": "docker.io",
                            "description": "agent image registry"
                        },
                        "repository": {
                            "type": "string",
                            "default": "kubegems/kubegems",
                            "description": "agent image repository"
                        },
                        "tag": {
                            "type": "string",
                            "default": "main",
                            "description": "agent image tag (immutable tags are recommended)"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "default": "IfNotPresent",
                            "description": "agent image pull policy"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "default": "[]",
                            "description": "agent image pull secrets"
                        },
                        "debug": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable agent image debug mode"
                        }
                    }
                },
                "replicaCount": {
                    "type": "number",
                    "default": 1,
                    "description": "Number of agent replicas to deploy"
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "default": 8080,
                            "description": "agent HTTP container port"
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable livenessProbe on agent containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for livenessProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for livenessProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for livenessProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for livenessProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for livenessProbe"
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable readinessProbe on agent containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for readinessProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for readinessProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for readinessProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for readinessProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for readinessProbe"
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable startupProbe on agent containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for startupProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for startupProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for startupProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for startupProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for startupProbe"
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom livenessProbe that overrides the default one"
                },
                "customReadinessProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom readinessProbe that overrides the default one"
                },
                "customStartupProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom startupProbe that overrides the default one"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "default": "{}",
                            "description": "The resources limits for the agent containers"
                        },
                        "requests": {
                            "type": "object",
                            "default": "{}",
                            "description": "The requested resources for the agent containers"
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enabled agent pods' Security Context"
                        },
                        "fsGroup": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set agent pod's Security Context fsGroup"
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enabled agent containers' Security Context"
                        },
                        "runAsUser": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set agent containers' Security Context runAsUser"
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "default": true,
                            "description": "Set agent containers' Security Context runAsNonRoot"
                        }
                    }
                },
                "tls": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable agent http listen TLS"
                        },
                        "useCertManager": {
                            "type": "boolean",
                            "default": false,
                            "description": "using cert manager to generate tls secret,if not using self-signed certificates if not exists"
                        },
                        "secretName": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "customize default tls secret name"
                        }
                    }
                },
                "httpSignature": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable agent HTTP Signature validation"
                        },
                        "token": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "HTTP Signature encode token override"
                        }
                    }
                },
                "logLevel": {
                    "type": "string",
                    "default": "info",
                    "description": "Set log level"
                },
                "existingConfigmap": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "The name of an existing ConfigMap with your custom configuration for agent"
                },
                "command": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container command (useful when using custom images)"
                },
                "args": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container args (useful when using custom images)"
                },
                "hostAliases": {
                    "type": "array",
                    "default": "[]",
                    "description": "agent pods host aliases"
                },
                "podLabels": {
                    "type": "object",
                    "default": "{}",
                    "description": "Extra labels for agent pods"
                },
                "podAnnotations": {
                    "type": "object",
                    "default": "{}",
                    "description": "Annotations for agent pods"
                },
                "podAffinityPreset": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Pod affinity preset. Ignored if `agent.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "default": "soft",
                    "description": "Pod anti-affinity preset. Ignored if `agent.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node affinity preset type. Ignored if `agent.affinity` is set. Allowed values: `soft` or `hard`"
                        },
                        "key": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node label key to match. Ignored if `agent.affinity` is set"
                        },
                        "values": {
                            "type": "array",
                            "default": "[]",
                            "description": "Node label values to match. Ignored if `agent.affinity` is set"
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "default": "{}",
                    "description": "Affinity for agent pods assignment"
                },
                "nodeSelector": {
                    "type": "object",
                    "default": "{}",
                    "description": "Node labels for agent pods assignment"
                },
                "tolerations": {
                    "type": "array",
                    "default": "[]",
                    "description": "Tolerations for agent pods assignment"
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "RollingUpdate",
                            "description": "agent statefulset strategy type"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "agent pods' priorityClassName"
                },
                "schedulerName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Name of the k8s scheduler (other than default) for agent pods"
                },
                "lifecycleHooks": {
                    "type": "object",
                    "default": "{}",
                    "description": "for the agent container(s) to automate configuration before or after startup"
                },
                "extraEnvVars": {
                    "type": "array",
                    "default": "[]",
                    "description": "Array with extra environment variables to add to agent nodes"
                },
                "extraEnvVarsCM": {
                    "type": "object",
                    "default": "{}",
                    "description": "Name of existing ConfigMap containing extra env vars for agent nodes"
                },
                "extraEnvVarsSecret": {
                    "type": "object",
                    "default": "{}",
                    "description": "Name of existing Secret containing extra env vars for agent nodes"
                },
                "extraVolumes": {
                    "type": "array",
                    "default": "[]",
                    "description": "Optionally specify extra list of additional volumes for the agent pod(s)"
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "default": "[]",
                    "description": "Optionally specify extra list of additional volumeMounts for the agent container(s)"
                },
                "sidecars": {
                    "type": "object",
                    "default": "{}",
                    "description": "Add additional sidecar containers to the agent pod(s)"
                },
                "initContainers": {
                    "type": "object",
                    "default": "{}",
                    "description": "Add additional init containers to the agent pod(s)"
                },
                "rbac": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "default": true,
                            "description": "Specifies whether RBAC resources should be created"
                        },
                        "singleNamespace": {
                            "type": "boolean",
                            "default": false,
                            "description": "limit agent scope in a single namespace"
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "default": true,
                            "description": "Specifies whether a ServiceAccount should be created"
                        },
                        "name": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "The name of the ServiceAccount to use."
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "ClusterIP",
                            "description": "agent service type"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "default": 8041,
                                    "description": "agent service HTTP port"
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "default": 0,
                                    "description": "Node port for HTTP"
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "agent service Cluster IP"
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "agent service Load Balancer IP"
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "default": "[]",
                            "description": "agent service Load Balancer sources"
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "default": "Cluster",
                            "description": "agent service external traffic policy"
                        },
                        "annotations": {
                            "type": "object",
                            "default": "{}",
                            "description": "Additional custom annotations for agent service"
                        },
                        "extraPorts": {
                            "type": "array",
                            "default": "[]",
                            "description": "Extra ports to expose in agent service (normally used with the `sidecars` value)"
                        }
                    }
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Create a service for accessing the metrics endpoint"
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "default": "ClusterIP",
                                    "description": "controller metrics service type"
                                },
                                "port": {
                                    "type": "number",
                                    "default": 9100,
                                    "description": "controller metrics service HTTP port"
                                },
                                "nodePort": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Node port for HTTP"
                                },
                                "clusterIP": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "controller metrics service Cluster IP"
                                },
                                "extraPorts": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Extra ports to expose (normally used with the `sidecar` value)"
                                },
                                "loadBalancerIP": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "controller metrics service Load Balancer IP"
                                },
                                "loadBalancerSourceRanges": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "controller metrics service Load Balancer sources"
                                },
                                "externalTrafficPolicy": {
                                    "type": "string",
                                    "default": "Cluster",
                                    "description": "controller metrics service external traffic policy"
                                },
                                "annotations": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Additional custom annotations for controller metrics service"
                                }
                            }
                        },
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "Specify if a servicemonitor will be deployed for prometheus-operator"
                                },
                                "jobLabel": {
                                    "type": "string",
                                    "default": "app.kubernetes.io/name",
                                    "description": "Specify the jobLabel to use for the prometheus-operator"
                                },
                                "honorLabels": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Honor metrics labels"
                                },
                                "selector": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Prometheus instance selector labels"
                                },
                                "scrapeTimeout": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Timeout after which the scrape is ended"
                                },
                                "interval": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Scrape interval. If not set, the Prometheus default scrape interval is used"
                                },
                                "additionalLabels": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Used to pass Labels that are required by the installed Prometheus Operator"
                                },
                                "metricRelabelings": {
                                    "type": "array",
                                    "default": "instance",
                                    "description": "Specify additional relabeling of metrics"
                                },
                                "relabelings": {
                                    "type": "array",
                                    "default": "endpoint|service|container|pod|namespace",
                                    "description": "Specify general relabeling"
                                }
                            }
                        }
                    }
                }
            }
        },
        "kubectl": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "default": "docker.io",
                            "description": "kubectl image registry"
                        },
                        "repository": {
                            "type": "string",
                            "default": "kubegems/gems-kubectl",
                            "description": "kubectl image repository"
                        },
                        "tag": {
                            "type": "string",
                            "default": "latest",
                            "description": "kubectl image tag (immutable tags are recommended)"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "default": "IfNotPresent",
                            "description": "kubectl image pull policy"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "default": "[]",
                            "description": "kubectl image pull secrets"
                        },
                        "debug": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable kubectl image debug mode"
                        }
                    }
                },
                "replicaCount": {
                    "type": "number",
                    "default": 1,
                    "description": "Number of kubectl replicas to deploy"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "default": "{}",
                            "description": "The resources limits for the kubectl containers"
                        },
                        "requests": {
                            "type": "object",
                            "default": "{}",
                            "description": "The requested resources for the kubectl containers"
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enabled kubectl pods' Security Context"
                        },
                        "fsGroup": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set kubectl pod's Security Context fsGroup"
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enabled kubectl containers' Security Context"
                        },
                        "runAsUser": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set kubectl containers' Security Context runAsUser"
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "default": true,
                            "description": "Set kubectl containers' Security Context runAsNonRoot"
                        }
                    }
                },
                "existingConfigmap": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "The name of an existing ConfigMap with your custom configuration for kubectl"
                },
                "command": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container command (useful when using custom images)"
                },
                "args": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container args (useful when using custom images)"
                },
                "hostAliases": {
                    "type": "array",
                    "default": "[]",
                    "description": "kubectl pods host aliases"
                },
                "podLabels": {
                    "type": "object",
                    "default": "{}",
                    "description": "Extra labels for kubectl pods"
                },
                "podAnnotations": {
                    "type": "object",
                    "default": "{}",
                    "description": "Annotations for kubectl pods"
                },
                "podAffinityPreset": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Pod affinity preset. Ignored if `kubectl.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "default": "soft",
                    "description": "Pod anti-affinity preset. Ignored if `kubectl.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node affinity preset type. Ignored if `kubectl.affinity` is set. Allowed values: `soft` or `hard`"
                        },
                        "key": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node label key to match. Ignored if `kubectl.affinity` is set"
                        },
                        "values": {
                            "type": "array",
                            "default": "[]",
                            "description": "Node label values to match. Ignored if `kubectl.affinity` is set"
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "default": "{}",
                    "description": "Affinity for kubectl pods assignment"
                },
                "nodeSelector": {
                    "type": "object",
                    "default": "{}",
                    "description": "Node labels for kubectl pods assignment"
                },
                "tolerations": {
                    "type": "array",
                    "default": "[]",
                    "description": "Tolerations for kubectl pods assignment"
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "RollingUpdate",
                            "description": "kubectl statefulset strategy type"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "kubectl pods' priorityClassName"
                },
                "schedulerName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Name of the k8s scheduler (other than default) for kubectl pods"
                },
                "lifecycleHooks": {
                    "type": "object",
                    "default": "{}",
                    "description": "for the kubectl container(s) to automate configuration before or after startup"
                }
            }
        },
        "controller": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "default": "docker.io",
                            "description": "controller image registry"
                        },
                        "repository": {
                            "type": "string",
                            "default": "kubegems/kubegems",
                            "description": "controller image repository"
                        },
                        "tag": {
                            "type": "string",
                            "default": "latest",
                            "description": "controller image tag (immutable tags are recommended)"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "default": "IfNotPresent",
                            "description": "controller image pull policy"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "default": "[]",
                            "description": "controller image pull secrets"
                        },
                        "debug": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable controller image debug mode"
                        }
                    }
                },
                "replicaCount": {
                    "type": "number",
                    "default": 1,
                    "description": "Number of controller replicas to deploy"
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "webhook": {
                            "type": "number",
                            "default": 9443,
                            "description": "controller webhook port"
                        },
                        "probe": {
                            "type": "number",
                            "default": 8080,
                            "description": "controller probe port"
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable livenessProbe on controller containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for livenessProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for livenessProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for livenessProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for livenessProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for livenessProbe"
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable readinessProbe on controller containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for readinessProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for readinessProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for readinessProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for readinessProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for readinessProbe"
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enable startupProbe on controller containers"
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "default": 10,
                            "description": "Initial delay seconds for startupProbe"
                        },
                        "periodSeconds": {
                            "type": "number",
                            "default": 20,
                            "description": "Period seconds for startupProbe"
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "default": 1,
                            "description": "Timeout seconds for startupProbe"
                        },
                        "failureThreshold": {
                            "type": "number",
                            "default": 6,
                            "description": "Failure threshold for startupProbe"
                        },
                        "successThreshold": {
                            "type": "number",
                            "default": 1,
                            "description": "Success threshold for startupProbe"
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom livenessProbe that overrides the default one"
                },
                "customReadinessProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom readinessProbe that overrides the default one"
                },
                "customStartupProbe": {
                    "type": "object",
                    "default": "{}",
                    "description": "Custom startupProbe that overrides the default one"
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "default": "{}",
                            "description": "The resources limits for the controller containers"
                        },
                        "requests": {
                            "type": "object",
                            "default": "{}",
                            "description": "The requested resources for the controller containers"
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enabled controller pods' Security Context"
                        },
                        "fsGroup": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set controller pod's Security Context fsGroup"
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enabled controller containers' Security Context"
                        },
                        "runAsUser": {
                            "type": "number",
                            "default": 1001,
                            "description": "Set controller containers' Security Context runAsUser"
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "default": true,
                            "description": "Set controller containers' Security Context runAsNonRoot"
                        }
                    }
                },
                "leaderElection": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable leader election for controller"
                        }
                    }
                },
                "logLevel": {
                    "type": "string",
                    "default": "info",
                    "description": "Log level for controller"
                },
                "existingConfigmap": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "The name of an existing ConfigMap with your custom configuration for controller"
                },
                "command": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container command (useful when using custom images)"
                },
                "args": {
                    "type": "array",
                    "default": "[]",
                    "description": "Override default container args (useful when using custom images)"
                },
                "hostAliases": {
                    "type": "array",
                    "default": "[]",
                    "description": "controller pods host aliases"
                },
                "podLabels": {
                    "type": "object",
                    "default": "{}",
                    "description": "Extra labels for controller pods"
                },
                "podAnnotations": {
                    "type": "object",
                    "default": "{}",
                    "description": "Annotations for controller pods"
                },
                "podAffinityPreset": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Pod affinity preset. Ignored if `controller.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "default": "soft",
                    "description": "Pod anti-affinity preset. Ignored if `controller.affinity` is set. Allowed values: `soft` or `hard`"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node affinity preset type. Ignored if `controller.affinity` is set. Allowed values: `soft` or `hard`"
                        },
                        "key": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "Node label key to match. Ignored if `controller.affinity` is set"
                        },
                        "values": {
                            "type": "array",
                            "default": "[]",
                            "description": "Node label values to match. Ignored if `controller.affinity` is set"
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "default": "{}",
                    "description": "Affinity for controller pods assignment"
                },
                "nodeSelector": {
                    "type": "object",
                    "default": "{}",
                    "description": "Node labels for controller pods assignment"
                },
                "tolerations": {
                    "type": "array",
                    "default": "[]",
                    "description": "Tolerations for controller pods assignment"
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "default": "RollingUpdate",
                            "description": "controller statefulset strategy type"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "controller pods' priorityClassName"
                },
                "schedulerName": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Name of the k8s scheduler (other than default) for controller pods"
                },
                "lifecycleHooks": {
                    "type": "object",
                    "default": "{}",
                    "description": "for the controller container(s) to automate configuration before or after startup"
                },
                "extraEnvVars": {
                    "type": "array",
                    "default": "[]",
                    "description": "Array with extra environment variables to add to controller nodes"
                },
                "extraEnvVarsCM": {
                    "type": "object",
                    "default": "{}",
                    "description": "Name of existing ConfigMap containing extra env vars for controller nodes"
                },
                "extraEnvVarsSecret": {
                    "type": "object",
                    "default": "{}",
                    "description": "Name of existing Secret containing extra env vars for controller nodes"
                },
                "extraVolumes": {
                    "type": "array",
                    "default": "[]",
                    "description": "Optionally specify extra list of additional volumes for the controller pod(s)"
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "default": "[]",
                    "description": "Optionally specify extra list of additional volumeMounts for the controller container(s)"
                },
                "sidecars": {
                    "type": "object",
                    "default": "{}",
                    "description": "Add additional sidecar containers to the controller pod(s)"
                },
                "initContainers": {
                    "type": "object",
                    "default": "{}",
                    "description": "Add additional init containers to the controller pod(s)"
                },
                "rbac": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "default": true,
                            "description": "Specifies whether RBAC resources should be created"
                        },
                        "createAggregateClusterRoles": {
                            "type": "boolean",
                            "default": true,
                            "description": "create clusterrole to binding view, edit, admin clusterrole"
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "default": true,
                            "description": "Specifies whether a ServiceAccount should be created"
                        },
                        "name": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "The name of the ServiceAccount to use."
                        }
                    }
                },
                "webhook": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Specifies whether the webhook should be enabled"
                        },
                        "useCertManager": {
                            "type": "boolean",
                            "default": false,
                            "description": "using cert-manager to generate a  certificate"
                        },
                        "secretName": {
                            "type": "string",
                            "default": "\"\"",
                            "description": "tls secret name for webhook"
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "default": "ClusterIP",
                                    "description": "agent service type"
                                },
                                "ports": {
                                    "type": "object",
                                    "properties": {
                                        "http": {
                                            "type": "number",
                                            "default": 443,
                                            "description": "webhook service HTTP port"
                                        }
                                    }
                                },
                                "nodePorts": {
                                    "type": "object",
                                    "properties": {
                                        "http": {
                                            "type": "number",
                                            "default": 0,
                                            "description": "Node port for HTTP"
                                        }
                                    }
                                },
                                "clusterIP": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "agent service Cluster IP"
                                },
                                "loadBalancerIP": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "agent service Load Balancer IP"
                                },
                                "loadBalancerSourceRanges": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "agent service Load Balancer sources"
                                },
                                "externalTrafficPolicy": {
                                    "type": "string",
                                    "default": "Cluster",
                                    "description": "agent service external traffic policy"
                                },
                                "annotations": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Additional custom annotations for agent service"
                                },
                                "extraPorts": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Extra ports to expose in agent service (normally used with the `sidecars` value)"
                                }
                            }
                        }
                    }
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Create a service for accessing the metrics endpoint"
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "default": "ClusterIP",
                                    "description": "controller metrics service type"
                                },
                                "port": {
                                    "type": "number",
                                    "default": 9100,
                                    "description": "controller metrics service HTTP port"
                                },
                                "nodePort": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Node port for HTTP"
                                },
                                "clusterIP": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "controller metrics service Cluster IP"
                                },
                                "extraPorts": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Extra ports to expose (normally used with the `sidecar` value)"
                                },
                                "loadBalancerIP": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "controller metrics service Load Balancer IP"
                                },
                                "loadBalancerSourceRanges": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "controller metrics service Load Balancer sources"
                                },
                                "externalTrafficPolicy": {
                                    "type": "string",
                                    "default": "Cluster",
                                    "description": "controller metrics service external traffic policy"
                                },
                                "annotations": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Additional custom annotations for controller metrics service"
                                }
                            }
                        },
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "Specify if a servicemonitor will be deployed for prometheus-operator"
                                },
                                "jobLabel": {
                                    "type": "string",
                                    "default": "app.kubernetes.io/name",
                                    "description": "Specify the jobLabel to use for the prometheus-operator"
                                },
                                "honorLabels": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Honor metrics labels"
                                },
                                "selector": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Prometheus instance selector labels"
                                },
                                "scrapeTimeout": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Timeout after which the scrape is ended"
                                },
                                "interval": {
                                    "type": "string",
                                    "default": "\"\"",
                                    "description": "Scrape interval. If not set, the Prometheus default scrape interval is used"
                                },
                                "additionalLabels": {
                                    "type": "object",
                                    "default": "{}",
                                    "description": "Used to pass Labels that are required by the installed Prometheus Operator"
                                },
                                "metricRelabelings": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Specify additional relabeling of metrics"
                                },
                                "relabelings": {
                                    "type": "array",
                                    "default": "[]",
                                    "description": "Specify general relabeling"
                                }
                            }
                        }
                    }
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable ingress record generation for agent"
                },
                "pathType": {
                    "type": "string",
                    "default": "ImplementationSpecific",
                    "description": "Ingress path type"
                },
                "apiVersion": {
                    "type": "string",
                    "default": "\"\"",
                    "description": "Force Ingress API version (automatically detected if not set)"
                },
                "hostname": {
                    "type": "string",
                    "default": "kubegems-local.local",
                    "description": "Default host for the ingress record"
                },
                "path": {
                    "type": "string",
                    "default": "/",
                    "description": "Default path for the ingress record"
                },
                "annotations": {
                    "type": "object",
                    "default": "{}",
                    "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations."
                },
                "tls": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable TLS configuration for the host defined at `ingress.hostname` parameter"
                },
                "selfSigned": {
                    "type": "boolean",
                    "default": false,
                    "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm"
                },
                "extraHosts": {
                    "type": "array",
                    "default": "[]",
                    "description": "An array with additional hostname(s) to be covered with the ingress record"
                },
                "extraPaths": {
                    "type": "array",
                    "default": "[]",
                    "description": "An array with additional arbitrary paths that may need to be added to the ingress under the main host"
                },
                "extraTls": {
                    "type": "array",
                    "default": "[]",
                    "description": "TLS configuration for additional hostname(s) to be covered with this ingress record"
                },
                "secrets": {
                    "type": "array",
                    "default": "[]",
                    "description": "Custom TLS certificates as secrets"
                }
            }
        }
    }
}