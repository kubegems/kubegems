# https://github.com/prometheus-operator/prometheus-operator/tree/main/helm
# https://github.com/prometheus-community/helm-charts/tree/main/charts/prometheus-node-exporter
# https://artifacthub.io/packages/helm/banzaicloud-stable/grafana-operator
# https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-state-metrics
{{- if .Values.monitoring.enabled }}
apiVersion: plugins.kubegems.io/v1beta1
kind: Plugin
metadata:
  name: kube-prometheus-stack
  namespace: {{ .Release.Namespace }}
spec:
  kind: helm
  repo: https://prometheus-community.github.io/helm-charts
  installNamespace: {{ .Values.monitoring.namespace }}
  enabled: {{ .Values.monitoring.enabled }}
  version: {{ .Values.monitoring.operator.version }}
  values:
    defaultRules:
      create: false
    kube-state-metrics:
      image:
        {{- if .Values.image.registry }}
        # repository: k8s.gcr.io/kube-state-metrics/kube-state-metrics
        repository: {{ printf "%s/%s/kube-state-metrics" .Values.image.registry .Values.image.repository }}
        {{- end }}
    grafana:
      adminPassword: demo!@#admin
      initChownData:
        image:
          {{- if .Values.image.registry }}
          # repository: busybox
          repository: {{ printf "%s/%s/busybox" .Values.image.registry .Values.image.repository }}
          {{- end }}
      image:
        {{- if .Values.image.registry }}
        # repository: grafana/grafana
        repository: {{ printf "%s/%s/grafana" .Values.image.registry .Values.image.repository }}
        {{- end }}
    prometheusOperator:
      tls:
        enabled: false
      admissionWebhooks:
        enabled: false
      image:
        {{- if .Values.image.registry }}
        # repository: quay.io/prometheus-operator/prometheus-operator
        repository: {{ printf "%s/%s/prometheus-operator" .Values.image.registry .Values.image.repository }}
        {{- end }}
        # tag: v0.50.1-gems
      prometheusConfigReloader:
        image:
          {{- if .Values.image.registry }}
          # repository: quay.io/prometheus-operator/prometheus-config-reloader
          repository: {{ printf "%s/%s/prometheus-config-reloader" .Values.image.registry .Values.image.repository }}
          {{- end }}
        # tag: v0.50.1-gems
    prometheus:
      prometheusSpec:
        image:
          {{- if .Values.image.registry }}
          # repository: quay.io/prometheus/prometheus
          repository: {{ printf "%s/%s/prometheus" .Values.image.registry .Values.image.repository }}
          {{- end }}
        enableAdminAPI: true
        enableFeatures: 
          - remote-write-receiver
        externalLabels:
          cluster: {{ .Values.clusterName }}
        externalUrl: http://prometheus.{{ .Values.clusterName }}.kubegems.io:9090
        ruleSelector:
          matchExpressions:
            - key: prometheusrule.kubegems.io/name
              operator: Exists
        probeSelectorNilUsesHelmValues: false
        additionalScrapeConfigs: |
{{ .Files.Get "files/prometheus/scrape-additional.yaml" | indent 10 }}
        retention: 30d
        resources:
          limits:
            cpu: 4
            memory: 8Gi
          requests:
            cpu: 2
            memory: 4Gi
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes:
              - ReadWriteOnce
              storageClassName: {{ .Values.storageClass }}
              resources:
                requests:
                  storage: 200Gi
              volumeMode: Filesystem
    alertmanager:
      # templateFiles:
      alertmanagerSpec:
        image:
          {{- if .Values.image.registry }}  
          # repository: quay.io/prometheus/alertmanager
          repository: {{ printf "%s/%s/alertmanager" .Values.image.registry .Values.image.repository }}
          {{- end }}
        alertmanagerConfigSelector:
          matchExpressions:
            - key: alertmanagerconfig.kubegems.io/name
              operator: Exists
        alertmanagerConfiguration:
          name: kubegems-default-monitor-amconfig
        retention: 240h
        storage:
          volumeClaimTemplate:
            spec:
              accessModes:
              - ReadWriteOnce
              storageClassName: {{ .Values.storageClass }}
              resources:
                requests:
                  storage: 10Gi
              volumeMode: Filesystem
        externalUrl: http://alertmanager.{{ .Values.clusterName }}.kubegems.io:9093
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
    prometheus-node-exporter:
      image:
        {{- if .Values.image.registry }}  
        # repository: quay.io/prometheus/node-exporter
        repository: {{ printf "%s/%s/node-exporter" .Values.image.registry .Values.image.repository }}
        {{- end }}
{{- end }}